name: PR Test 워크플로우

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]
  release:
    types: [ published ]

jobs:
  test:
    name: 테스트 실행
    runs-on: ubuntu-latest
    
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 세팅
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐시 세팅
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle 실행 권한 부여
        run: chmod +x gradlew

      - name: 테스트 실행 중...
        id: test
        run: |
          ./gradlew test
          echo "test_result=success" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 테스트 실패 상태 설정
        if: failure()
        run: echo "test_result=failure" >> $GITHUB_OUTPUT

      - name: 테스트 결과 분석
        if: always()
        run: |
          if [ -d "build/test-results/test" ]; then
            echo "TEST_SUMMARY<<EOF" >> $GITHUB_ENV
            find build/test-results/test -name "*.xml" -exec grep -l "failure\|error" {} \; | head -5 | while read file; do
              echo "Failed test in $file"
              grep -o 'name="[^"]*".*failure\|error' "$file" | head -3
            done >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "TEST_SUMMARY=테스트 결과를 찾을 수 없습니다" >> $GITHUB_ENV
          fi

      - name: n8n 웹훅으로 테스트 결과 전송
        if: always()
        run: |
          TEST_STATUS="${{ steps.test.outputs.test_result || 'failure' }}"
          WEBHOOK_URL="${{ secrets.N8N_WEBHOOK_URL_TEST }}"
          
          if [ "$TEST_STATUS" = "success" ]; then
            MESSAGE="✅ PR #${{ github.event.number }} 테스트 통과!"
            DETAILS="모든 테스트가 성공적으로 완료되었습니다"
          else
            MESSAGE="❌ PR #${{ github.event.number }} 테스트 실패"
            DETAILS="${{ env.TEST_SUMMARY }}"
          fi
          
          curl -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "{
              \"status\": \"$TEST_STATUS\",
              \"message\": \"$MESSAGE\",
              \"pr_number\": \"${{ github.event.number }}\",
              \"branch\": \"${{ github.head_ref }}\",
              \"details\": \"$DETAILS\",
              \"commit_sha\": \"${{ github.sha }}\",
              \"repository\": \"${{ github.repository }}\",
              \"workflow_name\": \"PR Test 워크플로우\"
            }"
