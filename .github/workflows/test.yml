name: 1. Run Tests

# main 브랜치에 push될 때 실행
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 코드 가져오기
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. JDK 설정 (Spring Boot 프로젝트일 경우)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 캐시 설정 (속도 향상)
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. 테스트 실행
      - name: Run tests
        run: chmod +x ./gradlew && ./gradlew test
        
      # 5. 테스트 결과를 저장하여 다음 워크플로에 알림
      - name: Create Test Status
        if: always()
        run: |
          echo "Test completed successfully" > test_status.txt
          
      # 6. 테스트 결과 아티팩트 업로드
      - name: Upload Test Status
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: test-status
          path: test_status.txt
          retention-days: 1
